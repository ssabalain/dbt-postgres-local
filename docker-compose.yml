version: '3.8'

services:
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - ${PGADMIN_PORT}:80
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - POSTGRES_HOST=postgreshost
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    depends_on:
      postgres:
        condition: service_healthy
    user: root
    volumes:
      - ./entrypoint.sh:/entrypoint_custom.sh
    entrypoint: /entrypoint_custom.sh

  postgres:
    container_name: postgres
    image: postgres
    hostname: postgreshost
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  dbt:
    container_name: dbt
    build: .
    platform: linux/amd64
    environment:
      DBT_PROFILES_DIR: /usr/app/dbt/dbt
      DBT_PROJECT_DIR: /usr/app/dbt/dbt
      DBT_TARGET: dev
    depends_on:
      - postgres
    volumes:
      - .:/usr/app/dbt
    command: ["sleep", "infinity"]
    restart: always

volumes:
  postgres_data: